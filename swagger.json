{
  "swagger": "2.0",
  "info": {
    "title": "Household API",
    "description": "API description in Markdown.",
    "version": "1.4.0"
  },
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Authorization",
      "description":"Get access token for protected endpoints"
    },
    {
      "name": "Cities",
      "description":"Everything about available cities"
    },
    {
      "name": "Payments",
      "description":"Everything about monthly payments"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/authenticate": {
      "post": {
        "tags":[
          "Authorization"
        ],
        "summary": "Require authentication token",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/hello": {
      "get": {
        "summary": "Endpoint for development purpose",
        "description": "Says 'Hello' to whole world or greets you personally.",
        "parameters": [
          {
            "in": "query",
            "name": "user",
            "schema": {
              "type": "string"
            },
            "description": "Who wants to get personal Greeting!"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cities/": {
      "get": {
        "tags":[
          "Cities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get all available cities",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/City"
            }
          }
        }
      }
    },
    "/cities/{townName}": {
      "delete": {
        "tags":[
          "Cities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete city using town name",
        "parameters": [
          {
            "in": "path",
            "name": "townName",
            "schema": {
              "type": "string"
            },
            "description": "Delete City by town name"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/payments": {
      "post": {
        "tags":[
          "Payments"
        ],
        "summary": "Insert new monthly payment to database",
        "description": "Post new monthly payment",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "payment",
            "in": "body",
            "description": "Payment information",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "New payment added",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "username": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        }
      }
    },
    "City":{
      "required":[
        "townName",
        "currentPopulation"
      ],
      "properties": {
        "townName":{
          "type": "string"
        },
        "currentPopulation":{
          "type": "string"
        },
        "townCode":{
          "type": "string"
        }
      }
    },
    "Payment": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "paymentDate": {
          "$ref": "#/definitions/PaymentDate"
        },
        "paymentDetails": {
          "$ref": "#/definitions/PaymentDetails"
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "houseNumber": {
          "type": "string"
        },
        "houseType": {
          "type": "string"
        }
      }
    },
    "PaymentDate": {
      "type": "object",
      "properties": {
        "year": {
          "type": "string"
        },
        "month": {
          "type": "string"
        },
        "season": {
          "type": "string"
        }
      }
    },
    "PaymentDetails": {
      "type": "object",
      "properties": {
        "centralHeating": {
          "type": "number"
        },
        "waterHeating": {
          "type": "number"
        },
        "waterConsumption": {
          "type": "number"
        },
        "gas": {
          "type": "number"
        },
        "garbageCollection": {
          "type": "number"
        },
        "overallElectricity": {
          "type": "number"
        },
        "renovationFund": {
          "type": "number"
        },
        "administrationFee": {
          "type": "number"
        },
        "loanMonthlyPayment": {
          "type": "number"
        },
        "insurance": {
          "type": "number"
        },
        "janitor": {
          "type": "number"
        },
        "total": {
          "type": "number"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}